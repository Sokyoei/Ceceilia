add_executable(alias alias.cpp)
add_executable(attribute attribute.cpp)
add_executable(base_type base_type.cpp)
add_executable(charconvert_example charconvert_example.cpp charconvert.hpp)
add_executable(constexpr constexpr.cpp)
add_executable(cstrings cstrings.c)
add_executable(ctimer ctimer.c)
add_executable(dump dump.cpp dump.hpp)
add_executable(exceptions exceptions.cpp)
add_executable(function_call function_call.cpp)
add_executable(function_pointer function_pointer.cpp)
add_executable(lambda lambda.cpp)

find_package(OpenMP REQUIRED)
add_executable(OpenMP OpenMP.cpp)
if(OpenMP_CXX_FOUND)
    target_link_libraries(OpenMP PUBLIC OpenMP::OpenMP_CXX)
endif()

add_executable(pointers pointers.c)
add_executable(ranges ranges.cpp)
add_executable(regular_expressions regular_expressions.cpp)
add_executable(rvalue_reference rvalue_reference.cpp)
add_executable(smater_pointer smater_pointer.cpp)
add_executable(strings strings.cpp)
add_executable(timer timer.cpp)
add_executable(three_way_comparison three_way_comparison.cpp)
add_executable(type_inference type_inference.cpp)
add_executable(variable_parameter variable_parameter.cpp)
add_executable(VLA VLA.c)

add_subdirectory(classes)
add_subdirectory(concurrency)
add_subdirectory(coroutine)
add_subdirectory(file)
add_subdirectory(net)
add_subdirectory(SIMD)
add_subdirectory(template)
